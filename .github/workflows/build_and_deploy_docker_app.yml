name: Build and Deploy Docker Application

on:
  push:
    branches: [ master ]

jobs:
  build_docker_image:
    name: Build Docker Image with Timestamp Tag
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Inject Secrets into appsettings.json
      run: |
        sed -i 's|<DISCORD_BOT_TOKEN>|'"${{ secrets.DISCORD_BOT_TOKEN }}"'|g' src/ConsoleApp/appsettings.json

    - name: Set Timestamp Tag for Docker Image
      id: set_tag
      run: echo "IMAGE_TAG=$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV

    - name: Build and Tag Docker Image
      run: |
        docker build -t grl-bot:${{ env.IMAGE_TAG }} -f src/ConsoleApp/Dockerfile src
        docker tag grl-bot:${{ env.IMAGE_TAG }} grl-bot:latest

    - name: Save Docker Image as Tar File
      run: |
        docker save -o grl-bot.tar grl-bot:${{ env.IMAGE_TAG }} grl-bot:latest

    - name: Copy Docker Compose File to Root and Replace Tag
      run: |
        cp src/docker-compose.production.yml .
        sed -i 's|<IMAGE_TAG>|'"${{ env.IMAGE_TAG }}"'|g' docker-compose.production.yml

    - name: Upload Docker Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: docker-files
        path: |
          grl-bot.tar
          docker-compose.production.yml

  deploy_to_server:
    name: Deploy Docker Image to Remote Server
    needs: build_docker_image
    runs-on: ubuntu-latest

    steps:
    - name: Download Docker Artifacts
      uses: actions/download-artifact@v3
      with:
        name: docker-files
        path: ./

    - name: Configure SSH Access
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DEPLOYMENT_KEY }}" > ~/.ssh/deployment_key
        chmod 600 ~/.ssh/deployment_key
        ssh-keyscan -H "${{ secrets.SERVER_ADDRESS }}" >> ~/.ssh/known_hosts

    - name: Transfer Docker Image and Compose File to Server
      run: |
        scp -i ~/.ssh/deployment_key ./docker-compose.production.yml ./grl-bot.tar "${{ secrets.DEPLOYMENT_USER }}"@"${{ secrets.SERVER_ADDRESS }}":"${{ secrets.DOCKER_DEPLOY_PATH }}"

    - name: Load Docker Image and Start Containers
      run: |
        ssh -i ~/.ssh/deployment_key "${{ secrets.DEPLOYMENT_USER }}"@"${{ secrets.SERVER_ADDRESS }}" '
          cd "${{ secrets.DOCKER_DEPLOY_PATH }}"
          docker load -i grl-bot.tar
          docker compose -f docker-compose.production.yml up -d --remove-orphans
        '

    - name: Cleanup Docker Image Tar Files
      run: |
        ssh -i ~/.ssh/deployment_key "${{ secrets.DEPLOYMENT_USER }}"@"${{ secrets.SERVER_ADDRESS }}" '
          rm -rf /var/docker-images/grl-bot/*
        '