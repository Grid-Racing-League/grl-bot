name: Build and Deploy Docker Application

on:
  push:
    branches: [ master ]

jobs:
  build_docker_image:
    name: Build Docker Image with Timestamp Tag
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Inject Secrets into appsettings.json
        run: |
          sed -i 's|<DISCORD_BOT_TOKEN>|'"${{ secrets.DISCORD_BOT_TOKEN }}"'|g' src/ConsoleApp/appsettings.json
          sed -i 's|<DB_CONNECTION_STRING>|'"${{ secrets.DB_CONNECTION_STRING }}"'|g' src/ConsoleApp/appsettings.json

      - name: Set Timestamp Tag for Docker Image
        run: echo "IMAGE_TAG=$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV

      - name: Build and Tag Docker Image
        run: |
          docker build -t grl-bot:${{ env.IMAGE_TAG }} -f src/ConsoleApp/Dockerfile src
          docker tag grl-bot:${{ env.IMAGE_TAG }} grl-bot:latest

      - name: Save Docker Image as Tar File
        run: |
          docker save -o grl-bot.tar grl-bot:${{ env.IMAGE_TAG }} grl-bot:latest

      - name: Prepare Docker Compose File
        run: |
          sed -i 's|<IMAGE_TAG>|'"${{ env.IMAGE_TAG }}"'|g' docker-compose.yml
          sed -i 's|<POSTGRES_DB>|'"${{ secrets.POSTGRES_DB }}"'|g' docker-compose.yml
          sed -i 's|<POSTGRES_USER>|'"${{ secrets.POSTGRES_USER }}"'|g' docker-compose.yml
          sed -i 's|<POSTGRES_PASSWORD>|'"${{ secrets.POSTGRES_PASSWORD }}"'|g' docker-compose.yml

      - name: Upload Docker Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-files
          retention-days: 1
          path: |
            grl-bot.tar
            docker-compose.yml

  deploy_to_server:
    needs: build_docker_image
    runs-on: ubuntu-latest

    steps:
      - name: Download Docker Artifacts
        uses: actions/download-artifact@v4
        with:
          name: docker-files
          path: ./

      - name: Configure SSH Access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOYMENT_KEY }}" > ~/.ssh/deployment_key
          chmod 600 ~/.ssh/deployment_key
          ssh-keyscan -H "${{ secrets.SERVER_ADDRESS }}" >> ~/.ssh/known_hosts

      - name: Transfer Files to Server
        run: |
          scp -i ~/.ssh/deployment_key docker-compose.yml grl-bot.tar "${{ secrets.DEPLOYMENT_USER }}"@"${{ secrets.SERVER_ADDRESS }}":"${{ secrets.DOCKER_DEPLOY_PATH }}"

      - name: Deploy Application
        run: |
          ssh -i ~/.ssh/deployment_key "${{ secrets.DEPLOYMENT_USER }}"@"${{ secrets.SERVER_ADDRESS }}" '
            cd "${{ secrets.DOCKER_DEPLOY_PATH }}"
            docker load -i grl-bot.tar
            docker compose up -d --remove-orphans
            rm -f grl-bot.tar
          '
